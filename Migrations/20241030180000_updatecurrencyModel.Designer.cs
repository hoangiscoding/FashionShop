// <auto-generated />
using System;
using FashionShop.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FashionShop.Migrations
{
    [DbContext(typeof(InventoryContext))]
    [Migration("20241030180000_updatecurrencyModel")]
    partial class updatecurrencyModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FashionShop.Models.Brand", b =>
                {
                    b.Property<string>("MaThuongHieu")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TenThuongHieu")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaThuongHieu");

                    b.ToTable("ThuongHieu");
                });

            modelBuilder.Entity("FashionShop.Models.Category", b =>
                {
                    b.Property<string>("MaDanhMuc")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TenDanhMuc")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaDanhMuc");

                    b.ToTable("DanhMuc");
                });

            modelBuilder.Entity("FashionShop.Models.Currency", b =>
                {
                    b.Property<string>("MaTienTe")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaTraoDoiTienTe")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TenTienTe")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("TyGiaHoiDoai")
                        .HasColumnType("money");

                    b.HasKey("MaTienTe");

                    b.HasIndex("MaTraoDoiTienTe");

                    b.ToTable("TienTe");
                });

            modelBuilder.Entity("FashionShop.Models.DonHang", b =>
                {
                    b.Property<string>("MaDonHang")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DieuKhoanThanhToan")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("GiamGia")
                        .HasColumnType("int");

                    b.Property<string>("MaBaoGia")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MaNCC")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaTienTeCoSo")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaTienTeDonHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("NgayBaoGia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TyGiaHoiDoai")
                        .HasColumnType("smallmoney");

                    b.HasKey("MaDonHang");

                    b.HasIndex("MaNCC");

                    b.HasIndex("MaTienTeCoSo");

                    b.HasIndex("MaTienTeDonHang");

                    b.ToTable("DonHang");
                });

            modelBuilder.Entity("FashionShop.Models.PoDetail", b =>
                {
                    b.Property<string>("MaChiTietDonHang")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Fob")
                        .HasColumnType("smallmoney");

                    b.Property<string>("MaDonHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaSP")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("PrcInBaseCur")
                        .HasColumnType("smallmoney");

                    b.Property<decimal>("SoLuong")
                        .HasColumnType("money");

                    b.HasKey("MaChiTietDonHang");

                    b.HasIndex("MaDonHang");

                    b.HasIndex("MaSP");

                    b.ToTable("ChiTietDonHang");
                });

            modelBuilder.Entity("FashionShop.Models.Product", b =>
                {
                    b.Property<string>("MaSP")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Anh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DonGiaBan")
                        .HasColumnType("money");

                    b.Property<decimal>("DonGiaNhap")
                        .HasColumnType("money");

                    b.Property<string>("MaDanhMuc")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaDonVi")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaHoSoSP")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaNhomSP")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaThuongHieu")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TenSP")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.HasKey("MaSP");

                    b.HasIndex("MaDanhMuc");

                    b.HasIndex("MaDonVi");

                    b.HasIndex("MaHoSoSP");

                    b.HasIndex("MaNhomSP");

                    b.HasIndex("MaThuongHieu");

                    b.ToTable("SanPham");
                });

            modelBuilder.Entity("FashionShop.Models.ProductGroup", b =>
                {
                    b.Property<string>("MaNhomSP")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TenNhom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaNhomSP");

                    b.ToTable("NhomSP");
                });

            modelBuilder.Entity("FashionShop.Models.ProductProfile", b =>
                {
                    b.Property<string>("MaHoSoSP")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("TenHoSoSP")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("MaHoSoSP");

                    b.ToTable("HoSoSP");
                });

            modelBuilder.Entity("FashionShop.Models.Supplier", b =>
                {
                    b.Property<string>("MaNCC")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DiaChi")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("SDT")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("TenNCC")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.HasKey("MaNCC");

                    b.ToTable("NhaCungCap");
                });

            modelBuilder.Entity("FashionShop.Models.Unit", b =>
                {
                    b.Property<string>("MaDonVi")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("TenDonVi")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("MaDonVi");

                    b.ToTable("DonVi");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("TenChuanHoa")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("TenChuanHoa")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[TenChuanHoa] IS NOT NULL");

                    b.ToTable("VaiTro", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("LoaiQuyen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GiaTriQuyen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaVaiTro")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("MaVaiTro");

                    b.ToTable("QuyenVaiTro", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("EmailChuanHoa")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("TenChuanHoa")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("EmailChuanHoa")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("TenChuanHoa")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[TenChuanHoa] IS NOT NULL");

                    b.ToTable("NguoiDung", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("LoaiQuyen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GiaTriQuyen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaNguoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("MaNguoiDung");

                    b.ToTable("QuyenNguoiDung", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("NCCDangNhap")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("KhoaNCC")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("TenNCCDichVu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaNguoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("NCCDangNhap", "KhoaNCC");

                    b.HasIndex("MaNguoiDung");

                    b.ToTable("ThongTinDangNhap", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("MaNguoiDung")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaVaiTro")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MaNguoiDung", "MaVaiTro");

                    b.HasIndex("MaVaiTro");

                    b.ToTable("VaiTroNguoiDung", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("MaNguoiDung")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NCCDangNhap")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaNguoiDung", "NCCDangNhap", "Name");

                    b.ToTable("TokenNguoiDung", (string)null);
                });

            modelBuilder.Entity("FashionShop.Models.Currency", b =>
                {
                    b.HasOne("FashionShop.Models.Currency", "TienTe")
                        .WithMany()
                        .HasForeignKey("MaTraoDoiTienTe");

                    b.Navigation("TienTe");
                });

            modelBuilder.Entity("FashionShop.Models.DonHang", b =>
                {
                    b.HasOne("FashionShop.Models.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("MaNCC")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FashionShop.Models.Currency", "BaseCurrency")
                        .WithMany()
                        .HasForeignKey("MaTienTeCoSo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FashionShop.Models.Currency", "POCurrency")
                        .WithMany()
                        .HasForeignKey("MaTienTeDonHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BaseCurrency");

                    b.Navigation("POCurrency");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("FashionShop.Models.PoDetail", b =>
                {
                    b.HasOne("FashionShop.Models.DonHang", "DonHang")
                        .WithMany("ChiTietDonHang")
                        .HasForeignKey("MaDonHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FashionShop.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("MaSP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DonHang");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("FashionShop.Models.Product", b =>
                {
                    b.HasOne("FashionShop.Models.Category", "DanhMuc")
                        .WithMany()
                        .HasForeignKey("MaDanhMuc");

                    b.HasOne("FashionShop.Models.Unit", "DonVi")
                        .WithMany()
                        .HasForeignKey("MaDonVi")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FashionShop.Models.ProductProfile", "HoSoSP")
                        .WithMany()
                        .HasForeignKey("MaHoSoSP");

                    b.HasOne("FashionShop.Models.ProductGroup", "NhomSP")
                        .WithMany()
                        .HasForeignKey("MaNhomSP");

                    b.HasOne("FashionShop.Models.Brand", "ThuongHieu")
                        .WithMany()
                        .HasForeignKey("MaThuongHieu");

                    b.Navigation("DanhMuc");

                    b.Navigation("DonVi");

                    b.Navigation("HoSoSP");

                    b.Navigation("NhomSP");

                    b.Navigation("ThuongHieu");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("MaVaiTro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("MaNguoiDung")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("MaNguoiDung")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("MaVaiTro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("MaNguoiDung")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("MaNguoiDung")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FashionShop.Models.DonHang", b =>
                {
                    b.Navigation("ChiTietDonHang");
                });
#pragma warning restore 612, 618
        }
    }
}
